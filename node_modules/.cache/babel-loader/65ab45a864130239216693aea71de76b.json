{"ast":null,"code":"var _jsxFileName = \"/Users/azamatalishev/dev/Test/src/components/Header/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useMenuAnimation from '../../Hooks/useMenuAnimation';\nimport Logo from './Logo';\nimport Nav from './Nav';\nimport MenuButton from '../Buttons/Menu';\nimport ThemeButton from '../Buttons/Theme';\nimport MobileNav from './MobileNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [menuExpanded, setMenuExpanded] = useState(\"unmounted\");\n  useMenuAnimation(menuExpanded, setMenuExpanded);\n  const modalStatus = useSelector(state => state.modal);\n  const hidden = modalStatus ? \"hidden\" : \"\";\n\n  const toggleMenu = () => {\n    if (menuExpanded === \"mounted\") {\n      setMenuExpanded(\"unmounting\");\n    } else if (menuExpanded === \"unmounted\") {\n      setMenuExpanded(\"mounting\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `navbar ${hidden}`,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), menuExpanded !== \"unmounted\" ? /*#__PURE__*/_jsxDEV(MobileNav, {\n      menuExpanded: menuExpanded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }, this) : null, /*#__PURE__*/_jsxDEV(MenuButton, {\n      toggleMenu: toggleMenu,\n      menuExpanded: menuExpanded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeButton, {\n      classNames: [\"theme-button\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"3laEPkWU2OpNxRnziBuIfzhvGWc=\", false, function () {\n  return [useMenuAnimation, useSelector];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Header/index.js"],"names":["useState","useSelector","useMenuAnimation","Logo","Nav","MenuButton","ThemeButton","MobileNav","Header","menuExpanded","setMenuExpanded","modalStatus","state","modal","hidden","toggleMenu"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,WAAD,CAAhD;AACAE,EAAAA,gBAAgB,CAACO,YAAD,EAAeC,eAAf,CAAhB;AAEA,QAAMC,WAAW,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA/B;AACA,QAAMC,MAAM,GAAGH,WAAW,GAAG,QAAH,GAAc,EAAxC;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACvB,QAAIN,YAAY,KAAK,SAArB,EAAgC;AAC9BC,MAAAA,eAAe,CAAC,YAAD,CAAf;AACD,KAFD,MAGK,IAAID,YAAY,KAAK,WAArB,EAAkC;AACrCC,MAAAA,eAAe,CAAC,UAAD,CAAf;AACD;AACF,GAPD;;AASA,sBACE;AAAQ,IAAA,SAAS,EAAG,UAASI,MAAO,EAApC;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGIL,YAAY,KAAK,WAAjB,gBAAgC,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAhC,GAA4E,IAHhF,eAIE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEM,UAAxB;AAAoC,MAAA,YAAY,EAAEN;AAAlD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,UAAU,EAAE,CAAC,cAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMD,M;UAGJN,gB,EAEoBD,W;;;KALhBO,M;AA4BN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport useMenuAnimation from '../../Hooks/useMenuAnimation'\nimport Logo from './Logo'\nimport Nav from './Nav'\nimport MenuButton from '../Buttons/Menu'\nimport ThemeButton from '../Buttons/Theme'\nimport MobileNav from './MobileNav'\n\nconst Header = () => {\n\n  const [menuExpanded, setMenuExpanded] = useState(\"unmounted\")\n  useMenuAnimation(menuExpanded, setMenuExpanded)\n  \n  const modalStatus = useSelector(state => state.modal)\n  const hidden = modalStatus ? \"hidden\" : \"\" \n\n  const toggleMenu = () => {\n    if (menuExpanded === \"mounted\") {\n      setMenuExpanded(\"unmounting\")\n    }\n    else if (menuExpanded === \"unmounted\") {\n      setMenuExpanded(\"mounting\")\n    }\n  }\n\n  return (\n    <header className={`navbar ${hidden}`}>\n      <Logo />\n      <Nav />\n      { menuExpanded !== \"unmounted\" ?  <MobileNav menuExpanded={menuExpanded} /> : null }\n      <MenuButton toggleMenu={toggleMenu} menuExpanded={menuExpanded}/>\n      <ThemeButton classNames={[\"theme-button\"]} />\n    </header>\n  )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}
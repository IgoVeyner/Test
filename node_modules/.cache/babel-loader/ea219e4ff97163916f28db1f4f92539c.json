{"ast":null,"code":"var _jsxFileName = \"/Users/azamatalishev/dev/Test/src/components/Projects/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setOpen, setClose } from '../../../redux/actions/modalActions';\nimport ModalImage from \"../ModalImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  image,\n  orderReverse,\n  projectName\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const modalStatus = useSelector(state => state.modal);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n    dispatch(modalStatus ? setClose() : setOpen());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-preview ${orderReverse}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"project-img\",\n      src: image,\n      alt: projectName,\n      onClick: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(ModalImage, {\n      image: image,\n      toggleModal: toggleModal,\n      projectName: projectName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"npoOAxLtXwo+cLuLvY95uJ1+fIE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Projects/Modal/index.js"],"names":["useState","useSelector","useDispatch","setOpen","setClose","ModalImage","Modal","image","orderReverse","projectName","isOpen","setIsOpen","modalStatus","state","modal","dispatch","toggleModal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,qCAAlC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AAAA;;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMY,WAAW,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAK,IAAAA,QAAQ,CAACH,WAAW,GAAGR,QAAQ,EAAX,GAAgBD,OAAO,EAAnC,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,mBAAkBK,YAAa,EAAhD;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,GAAG,EAAED,KAFP;AAGE,MAAA,GAAG,EAAEE,WAHP;AAIE,MAAA,OAAO,EAAEO;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAOGN,MAAM,gBACL,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAA0B,MAAA,WAAW,EAAES,WAAvC;AAAoD,MAAA,WAAW,EAAEP;AAAjE;AAAA;AAAA;AAAA;AAAA,YADK,GAGL,IAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;GAAMH,K;UAGgBL,W,EACHC,W;;;KAJbI,K;AA4BN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setOpen, setClose } from '../../../redux/actions/modalActions'\nimport ModalImage from \"../ModalImage\";\n\nconst Modal = ({ image, orderReverse, projectName }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const modalStatus = useSelector(state => state.modal)\n  const dispatch = useDispatch()\n  \n  const toggleModal = () => {\n    setIsOpen(!isOpen)\n    dispatch(modalStatus ? setClose() : setOpen())\n  }\n\n  return (\n    <div className={`project-preview ${orderReverse}`}>\n      <img \n        className=\"project-img\"\n        src={image}\n        alt={projectName}\n        onClick={toggleModal}\n      />\n      {isOpen ? \n        <ModalImage image={image} toggleModal={toggleModal} projectName={projectName} /> \n        : \n        null\n      }\n    </div>\n  )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}
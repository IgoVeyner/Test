{"ast":null,"code":"import _slicedToArray from\"/Users/azamatalishev/dev/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useSelector,useDispatch}from'react-redux';import{setLight,setDark}from'../../../redux/actions/themeActions';import AnimatedIcon from'../../Icons/Animated';import{jsx as _jsx}from\"react/jsx-runtime\";var ThemeButton=function ThemeButton(_ref){var classNames=_ref.classNames;var _classNames=_slicedToArray(classNames,1),buttonName=_classNames[0];var theme=useSelector(function(state){return state.theme;});var dispatch=useDispatch();var toggleTheme=function toggleTheme(){return dispatch(theme===\"dark\"?setLight():setDark());};return/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(buttonName),onClick:toggleTheme,children:/*#__PURE__*/_jsx(AnimatedIcon,{theme:theme})});};export default ThemeButton;","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Buttons/Theme/index.js"],"names":["useSelector","useDispatch","setLight","setDark","AnimatedIcon","ThemeButton","classNames","buttonName","theme","state","dispatch","toggleTheme"],"mappings":"oJAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,qCAAlC,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CACtC,+BAAqBA,UAArB,IAAOC,UAAP,gBAEA,GAAMC,CAAAA,KAAK,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAV,EAAN,CAAzB,CACA,GAAME,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,QAAQ,CAACF,KAAK,GAAK,MAAV,CAAmBN,QAAQ,EAA3B,CAAgCC,OAAO,EAAxC,CAAd,EAApB,CAEA,mBACE,eACE,SAAS,WAAKI,UAAL,CADX,CAEE,OAAO,CAAEI,WAFX,uBAIE,KAAC,YAAD,EAAc,KAAK,CAAEH,KAArB,EAJF,EADF,CAQD,CAhBD,CAkBA,cAAeH,CAAAA,WAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { setLight, setDark } from '../../../redux/actions/themeActions'\nimport AnimatedIcon from '../../Icons/Animated'\n\nconst ThemeButton = ({ classNames }) => {\n  const [buttonName] = classNames\n\n  const theme = useSelector(state => state.theme)\n  const dispatch = useDispatch()\n  \n  const toggleTheme = () => dispatch(theme === \"dark\" ? setLight() : setDark())\n\n  return (\n    <button \n      className={`${buttonName}`}\n      onClick={toggleTheme}\n      >\n      <AnimatedIcon theme={theme} />\n    </button>\n  )\n}\n\nexport default ThemeButton"]},"metadata":{},"sourceType":"module"}
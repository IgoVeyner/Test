{"ast":null,"code":"import _slicedToArray from\"/Users/azamatalishev/dev/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{useSelector,useDispatch}from'react-redux';import{setOpen,setClose}from'../../../redux/actions/modalActions';import ModalImage from\"../ModalImage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modal=function Modal(_ref){var image=_ref.image,orderReverse=_ref.orderReverse,projectName=_ref.projectName;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var modalStatus=useSelector(function(state){return state.modal;});var dispatch=useDispatch();var toggleModal=function toggleModal(){setIsOpen(!isOpen);dispatch(modalStatus?setClose():setOpen());};return/*#__PURE__*/_jsxs(\"div\",{className:\"project-preview \".concat(orderReverse),children:[/*#__PURE__*/_jsx(\"img\",{className:\"project-img\",src:image,alt:projectName,onClick:toggleModal}),isOpen?/*#__PURE__*/_jsx(ModalImage,{image:image,toggleModal:toggleModal,projectName:projectName}):null]});};export default Modal;","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Projects/Modal/index.js"],"names":["useState","useSelector","useDispatch","setOpen","setClose","ModalImage","Modal","image","orderReverse","projectName","isOpen","setIsOpen","modalStatus","state","modal","dispatch","toggleModal"],"mappings":"oJAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,qCAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA0C,IAAvCC,CAAAA,KAAuC,MAAvCA,KAAuC,CAAhCC,YAAgC,MAAhCA,YAAgC,CAAlBC,WAAkB,MAAlBA,WAAkB,CACtD,cAA4BT,QAAQ,CAAC,KAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,WAAW,CAAGX,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EAAN,CAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBL,SAAS,CAAC,CAACD,MAAF,CAAT,CACAK,QAAQ,CAACH,WAAW,CAAGR,QAAQ,EAAX,CAAgBD,OAAO,EAAnC,CAAR,CACD,CAHD,CAKA,mBACE,aAAK,SAAS,2BAAqBK,YAArB,CAAd,wBACE,YACE,SAAS,CAAC,aADZ,CAEE,GAAG,CAAED,KAFP,CAGE,GAAG,CAAEE,WAHP,CAIE,OAAO,CAAEO,WAJX,EADF,CAOGN,MAAM,cACL,KAAC,UAAD,EAAY,KAAK,CAAEH,KAAnB,CAA0B,WAAW,CAAES,WAAvC,CAAoD,WAAW,CAAEP,WAAjE,EADK,CAGL,IAVJ,GADF,CAeD,CA1BD,CA4BA,cAAeH,CAAAA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setOpen, setClose } from '../../../redux/actions/modalActions'\nimport ModalImage from \"../ModalImage\";\n\nconst Modal = ({ image, orderReverse, projectName }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const modalStatus = useSelector(state => state.modal)\n  const dispatch = useDispatch()\n  \n  const toggleModal = () => {\n    setIsOpen(!isOpen)\n    dispatch(modalStatus ? setClose() : setOpen())\n  }\n\n  return (\n    <div className={`project-preview ${orderReverse}`}>\n      <img \n        className=\"project-img\"\n        src={image}\n        alt={projectName}\n        onClick={toggleModal}\n      />\n      {isOpen ? \n        <ModalImage image={image} toggleModal={toggleModal} projectName={projectName} /> \n        : \n        null\n      }\n    </div>\n  )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}
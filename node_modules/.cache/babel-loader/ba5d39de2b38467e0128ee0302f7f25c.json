{"ast":null,"code":"import _slicedToArray from\"/Users/azamatalishev/dev/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MenuButton=function MenuButton(_ref){var toggleMenu=_ref.toggleMenu,menuExpanded=_ref.menuExpanded;var theme=useSelector(function(state){return state.theme;});var _getStyles=getStyles(theme),_getStyles2=_slicedToArray(_getStyles,2),menuColor=_getStyles2[0],menuBGColor=_getStyles2[1];var cases=[\"unmounted\",\"unmounting\"];var menuStatus=cases.includes(menuExpanded)?\"\":\"menu-open\";return/*#__PURE__*/_jsx(\"div\",{className:\"menu \".concat(menuStatus,\" \").concat(menuBGColor),onClick:toggleMenu,children:/*#__PURE__*/_jsxs(\"div\",{className:\"hamburger\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"menu-line \".concat(menuColor)}),/*#__PURE__*/_jsx(\"span\",{className:\"menu-line \".concat(menuColor)}),/*#__PURE__*/_jsx(\"span\",{className:\"menu-line \".concat(menuColor)})]})});};var getStyles=function getStyles(theme){if(theme===\"dark\"){return[\"dark-menu\",\"dark-bg-menu\"];}else{return[\"light-menu\",\"light-bg-menu\"];}};export default MenuButton;","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Buttons/Menu/index.js"],"names":["useSelector","MenuButton","toggleMenu","menuExpanded","theme","state","getStyles","menuColor","menuBGColor","cases","menuStatus","includes"],"mappings":"oJAAA,OAASA,WAAT,KAA4B,aAA5B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAkC,IAA/BC,CAAAA,UAA+B,MAA/BA,UAA+B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACnD,GAAMC,CAAAA,KAAK,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAV,EAAN,CAAzB,CACA,eAAiCE,SAAS,CAACF,KAAD,CAA1C,0CAAOG,SAAP,gBAAkBC,WAAlB,gBAEA,GAAMC,CAAAA,KAAK,CAAG,CAAC,WAAD,CAAc,YAAd,CAAd,CACA,GAAMC,CAAAA,UAAU,CAAGD,KAAK,CAACE,QAAN,CAAeR,YAAf,EAA+B,EAA/B,CAAoC,WAAvD,CAEA,mBACE,YACE,SAAS,gBAAUO,UAAV,aAAwBF,WAAxB,CADX,CAEE,OAAO,CAAEN,UAFX,uBAIE,aAAK,SAAS,CAAC,WAAf,wBACE,aAAM,SAAS,qBAAeK,SAAf,CAAf,EADF,cAEE,aAAM,SAAS,qBAAeA,SAAf,CAAf,EAFF,cAGE,aAAM,SAAS,qBAAeA,SAAf,CAAf,EAHF,GAJF,EADF,CAYD,CAnBD,CAqBA,GAAMD,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,KAAD,CAAW,CAE3B,GAAIA,KAAK,GAAK,MAAd,CAAsB,CACpB,MAAO,CAAC,WAAD,CAAc,cAAd,CAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAC,YAAD,CAAe,eAAf,CAAP,CACD,CAEF,CARD,CAUA,cAAeH,CAAAA,UAAf","sourcesContent":["import { useSelector } from 'react-redux'\n\nconst MenuButton = ({ toggleMenu, menuExpanded }) => {\n  const theme = useSelector(state => state.theme)\n  const [menuColor, menuBGColor] = getStyles(theme)\n\n  const cases = [\"unmounted\", \"unmounting\"]\n  const menuStatus = cases.includes(menuExpanded) ? \"\" : \"menu-open\"\n  \n  return (\n    <div \n      className={`menu ${menuStatus} ${menuBGColor}`}\n      onClick={toggleMenu}\n      >\n      <div className=\"hamburger\" >\n        <span className={`menu-line ${menuColor}`}></span>\n        <span className={`menu-line ${menuColor}`}></span>\n        <span className={`menu-line ${menuColor}`}></span>\n      </div>\n    </div>\n  )\n}\n\nconst getStyles = (theme) => {\n\n  if (theme === \"dark\") {\n    return [\"dark-menu\", \"dark-bg-menu\"]\n  } else {\n    return [\"light-menu\", \"light-bg-menu\"]\n  }\n\n}\n\nexport default MenuButton"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/azamatalishev/dev/Test/src/components/Buttons/Menu/index.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuButton = ({\n  toggleMenu,\n  menuExpanded\n}) => {\n  _s();\n\n  const theme = useSelector(state => state.theme);\n  const [menuColor, menuBGColor] = getStyles(theme);\n  const cases = [\"unmounted\", \"unmounting\"];\n  const menuStatus = cases.includes(menuExpanded) ? \"\" : \"menu-open\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `menu ${menuStatus} ${menuBGColor}`,\n    onClick: toggleMenu,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hamburger\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `menu-line ${menuColor}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `menu-line ${menuColor}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `menu-line ${menuColor}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuButton, \"EAneyT91dqW6z6wQ5fhCq5vmnAM=\", false, function () {\n  return [useSelector];\n});\n\n_c = MenuButton;\n\nconst getStyles = theme => {\n  if (theme === \"dark\") {\n    return [\"dark-menu\", \"dark-bg-menu\"];\n  } else {\n    return [\"light-menu\", \"light-bg-menu\"];\n  }\n};\n\nexport default MenuButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuButton\");","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Buttons/Menu/index.js"],"names":["useSelector","MenuButton","toggleMenu","menuExpanded","theme","state","menuColor","menuBGColor","getStyles","cases","menuStatus","includes"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAAA;;AACnD,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAACE,SAAD,EAAYC,WAAZ,IAA2BC,SAAS,CAACJ,KAAD,CAA1C;AAEA,QAAMK,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd;AACA,QAAMC,UAAU,GAAGD,KAAK,CAACE,QAAN,CAAeR,YAAf,IAA+B,EAA/B,GAAoC,WAAvD;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,QAAOO,UAAW,IAAGH,WAAY,EAD/C;AAEE,IAAA,OAAO,EAAEL,UAFX;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAG,aAAYI,SAAU;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAG,aAAYA,SAAU;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAG,aAAYA,SAAU;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAML,U;UACUD,W;;;KADVC,U;;AAqBN,MAAMO,SAAS,GAAIJ,KAAD,IAAW;AAE3B,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,WAAO,CAAC,WAAD,EAAc,cAAd,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CAAC,YAAD,EAAe,eAAf,CAAP;AACD;AAEF,CARD;;AAUA,eAAeH,UAAf","sourcesContent":["import { useSelector } from 'react-redux'\n\nconst MenuButton = ({ toggleMenu, menuExpanded }) => {\n  const theme = useSelector(state => state.theme)\n  const [menuColor, menuBGColor] = getStyles(theme)\n\n  const cases = [\"unmounted\", \"unmounting\"]\n  const menuStatus = cases.includes(menuExpanded) ? \"\" : \"menu-open\"\n  \n  return (\n    <div \n      className={`menu ${menuStatus} ${menuBGColor}`}\n      onClick={toggleMenu}\n      >\n      <div className=\"hamburger\" >\n        <span className={`menu-line ${menuColor}`}></span>\n        <span className={`menu-line ${menuColor}`}></span>\n        <span className={`menu-line ${menuColor}`}></span>\n      </div>\n    </div>\n  )\n}\n\nconst getStyles = (theme) => {\n\n  if (theme === \"dark\") {\n    return [\"dark-menu\", \"dark-bg-menu\"]\n  } else {\n    return [\"light-menu\", \"light-bg-menu\"]\n  }\n\n}\n\nexport default MenuButton"]},"metadata":{},"sourceType":"module"}
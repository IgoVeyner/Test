{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nconst useTypingAnimation = (words, index, setIndex, reverse, setReverse, subIndex, setSubIndex) => {\n  _s();\n\n  useEffect(() => {\n    if (subIndex === words[index].length + 1 && !reverse) {\n      setReverse(true);\n      return;\n    }\n\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      index === words.length - 1 ? setIndex(0) : setIndex(prev => prev + 1);\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setSubIndex(prev => prev + (reverse ? -1 : 1));\n    }, Math.max(reverse ? 75 : subIndex === words[index].length ? 1000 : 150, parseInt(Math.random() * 1000)));\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse, setIndex, setReverse, setSubIndex, words]);\n};\n\n_s(useTypingAnimation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useTypingAnimation;","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/Hooks/useTypingAnimation.js"],"names":["useEffect","useTypingAnimation","words","index","setIndex","reverse","setReverse","subIndex","setSubIndex","length","prev","timeout","setTimeout","Math","max","parseInt","random","clearTimeout"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,WAAxD,KAAwE;AAAA;;AACjGR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,KAAKL,KAAK,CAACC,KAAD,CAAL,CAAaM,MAAb,GAAsB,CAAnC,IAAwC,CAACJ,OAA7C,EAAuD;AACrDC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AAED,QAAIC,QAAQ,KAAK,CAAb,IAAkBF,OAAtB,EAA+B;AAC7BC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,KAAK,KAAKD,KAAK,CAACO,MAAN,GAAe,CAAzB,GAA6BL,QAAQ,CAAC,CAAD,CAArC,GAA2CA,QAAQ,CAAEM,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAnD;AACA;AACD;;AAGD,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,MAAAA,WAAW,CAAEE,IAAD,IAAUA,IAAI,IAAIL,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAAnB,CAAf,CAAX;AACD,KAFyB,EAEvBQ,IAAI,CAACC,GAAL,CAAST,OAAO,GAAG,EAAH,GAAQE,QAAQ,KAAKL,KAAK,CAACC,KAAD,CAAL,CAAaM,MAA1B,GAAmC,IAAnC,GACf,GADT,EACcM,QAAQ,CAACF,IAAI,CAACG,MAAL,KAAgB,IAAjB,CADtB,CAFuB,CAA1B;AAKA,WAAO,MAAMC,YAAY,CAACN,OAAD,CAAzB;AACD,GAnBQ,EAmBN,CAACJ,QAAD,EAAWJ,KAAX,EAAkBE,OAAlB,EAA2BD,QAA3B,EAAqCE,UAArC,EAAiDE,WAAjD,EAA8DN,KAA9D,CAnBM,CAAT;AAoBD,CArBD;;GAAMD,kB;;AAuBN,eAAeA,kBAAf","sourcesContent":["import { useEffect } from 'react';\n\nconst useTypingAnimation = (words, index, setIndex, reverse, setReverse, subIndex, setSubIndex) => {\n  useEffect(() => {\n    if (subIndex === words[index].length + 1 && !reverse ) {\n      setReverse(true);\n      return;\n    }\n\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      index === words.length - 1 ? setIndex(0) : setIndex((prev) => prev + 1)\n      return;\n    }\n\n\n    const timeout = setTimeout(() => {\n      setSubIndex((prev) => prev + (reverse ? -1 : 1));\n    }, Math.max(reverse ? 75 : subIndex === words[index].length ? 1000 :\n                150, parseInt(Math.random() * 1000)));\n\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse, setIndex, setReverse, setSubIndex, words]);\n}\n\nexport default useTypingAnimation"]},"metadata":{},"sourceType":"module"}
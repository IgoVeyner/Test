{"ast":null,"code":"import _slicedToArray from\"/Users/azamatalishev/dev/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import GithubIcon from'../../Icons/Github';import YoutubeIcon from'../../Icons/Youtube';import WebsiteIcon from'../../Icons/Website';import Divider from'../Divider';import Modal from'../Modal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Project=function Project(_ref){var project=_ref.project,id=_ref.id,reverse=_ref.reverse,theme=_ref.theme;var projectName=project.projectName,description=project.description,github=project.github,demoLink=project.demoLink,img=project.img,live=project.live;var _ref2=reverse?[\"order-reverse\",\"project-reverse\"]:[\"\",\"\"],_ref3=_slicedToArray(_ref2,2),orderReverse=_ref3[0],projReverse=_ref3[1];var _getStyles=getStyles(theme),_getStyles2=_slicedToArray(_getStyles,3),titleColor=_getStyles2[0],textColor=_getStyles2[1],iconColor=_getStyles2[2];return/*#__PURE__*/_jsx(\"section\",{className:\"section section-project\",id:id,children:/*#__PURE__*/_jsxs(\"div\",{className:\"project \".concat(projReverse),children:[/*#__PURE__*/_jsx(Modal,{image:img,orderReverse:orderReverse,projectName:projectName}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-description\",children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"h1\",{className:\"project-title \".concat(titleColor),children:projectName}),/*#__PURE__*/_jsx(\"p\",{className:\"project-text \".concat(textColor),children:description}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-links-container\",children:[/*#__PURE__*/_jsx(GithubIcon,{link:github,iconColor:iconColor}),live?/*#__PURE__*/_jsx(WebsiteIcon,{link:live,iconColor:iconColor}):null,/*#__PURE__*/_jsx(YoutubeIcon,{link:demoLink,iconColor:iconColor})]})]})]})});};var getStyles=function getStyles(theme){if(theme===\"dark\"){return[\"dark-title\",\"\",\"dark-icon\"];}else{return[\"light-title\",\"light-proj-text\",\"light-icon\"];}};export default Project;","map":{"version":3,"sources":["/Users/azamatalishev/dev/Test/src/components/Projects/Project/index.js"],"names":["GithubIcon","YoutubeIcon","WebsiteIcon","Divider","Modal","Project","project","id","reverse","theme","projectName","description","github","demoLink","img","live","orderReverse","projReverse","getStyles","titleColor","textColor","iconColor"],"mappings":"oJAAA,MAAOA,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAqC,IAAlCC,CAAAA,OAAkC,MAAlCA,OAAkC,CAAzBC,EAAyB,MAAzBA,EAAyB,CAArBC,OAAqB,MAArBA,OAAqB,CAAZC,KAAY,MAAZA,KAAY,CACnD,GAAOC,CAAAA,WAAP,CAAiEJ,OAAjE,CAAOI,WAAP,CAAoBC,WAApB,CAAiEL,OAAjE,CAAoBK,WAApB,CAAiCC,MAAjC,CAAiEN,OAAjE,CAAiCM,MAAjC,CAAyCC,QAAzC,CAAiEP,OAAjE,CAAyCO,QAAzC,CAAmDC,GAAnD,CAAiER,OAAjE,CAAmDQ,GAAnD,CAAwDC,IAAxD,CAAiET,OAAjE,CAAwDS,IAAxD,CACA,UACEP,OAAO,CAAG,CAAC,eAAD,CAAkB,iBAAlB,CAAH,CAA0C,CAAC,EAAD,CAAK,EAAL,CADnD,+BAAOQ,YAAP,UAAqBC,WAArB,UAEA,eAAyCC,SAAS,CAACT,KAAD,CAAlD,0CAAKU,UAAL,gBAAiBC,SAAjB,gBAA4BC,SAA5B,gBAEA,mBACE,gBAAS,SAAS,CAAC,yBAAnB,CAA6C,EAAE,CAAEd,EAAjD,uBACE,aAAK,SAAS,mBAAaU,WAAb,CAAd,wBAEE,KAAC,KAAD,EAAO,KAAK,CAAEH,GAAd,CAAmB,YAAY,CAAEE,YAAjC,CAA+C,WAAW,CAAEN,WAA5D,EAFF,cAIE,aAAK,SAAS,CAAC,qBAAf,wBAEE,KAAC,OAAD,IAFF,cAGE,WAAI,SAAS,yBAAmBS,UAAnB,CAAb,UAA+CT,WAA/C,EAHF,cAIE,UAAG,SAAS,wBAAkBU,SAAlB,CAAZ,UAA4CT,WAA5C,EAJF,cAME,aAAK,SAAS,CAAC,yBAAf,wBAEE,KAAC,UAAD,EAAY,IAAI,CAAEC,MAAlB,CAA0B,SAAS,CAAES,SAArC,EAFF,CAGGN,IAAI,cAAG,KAAC,WAAD,EAAa,IAAI,CAAEA,IAAnB,CAAyB,SAAS,CAAEM,SAApC,EAAH,CAAuD,IAH9D,cAIE,KAAC,WAAD,EAAa,IAAI,CAAER,QAAnB,CAA6B,SAAS,CAAEQ,SAAxC,EAJF,GANF,GAJF,GADF,EADF,CAuBD,CA7BD,CA+BA,GAAMH,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAW,CAE3B,GAAIA,KAAK,GAAK,MAAd,CAAsB,CACpB,MAAO,CAAC,YAAD,CAAe,EAAf,CAAmB,WAAnB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAC,aAAD,CAAgB,iBAAhB,CAAmC,YAAnC,CAAP,CACD,CAEF,CARD,CAUA,cAAeJ,CAAAA,OAAf","sourcesContent":["import GithubIcon from '../../Icons/Github'\nimport YoutubeIcon from '../../Icons/Youtube'\nimport WebsiteIcon from '../../Icons/Website'\nimport Divider from '../Divider'\nimport Modal from '../Modal'\n\nconst Project = ({ project, id, reverse, theme }) => {\n  const {projectName, description, github, demoLink, img, live } = project\n  const [orderReverse, projReverse] = \n    reverse ? [\"order-reverse\", \"project-reverse\"] : [\"\", \"\"]\n  let [titleColor, textColor, iconColor] = getStyles(theme)\n\n  return (\n    <section className=\"section section-project\" id={id}>\n      <div className={`project ${projReverse}`}>\n\n        <Modal image={img} orderReverse={orderReverse} projectName={projectName} />\n\n        <div className=\"project-description\">\n\n          <Divider />\n          <h1 className={`project-title ${titleColor}`}>{projectName}</h1>\n          <p className={`project-text ${textColor}`}>{description}</p>\n\n          <div className=\"project-links-container\">\n\n            <GithubIcon link={github} iconColor={iconColor} />\n            {live ? <WebsiteIcon link={live} iconColor={iconColor} /> : null}\n            <YoutubeIcon link={demoLink} iconColor={iconColor} />\n            \n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst getStyles = (theme) => {\n\n  if (theme === \"dark\") {\n    return [\"dark-title\", \"\", \"dark-icon\"]\n  } else {\n    return [\"light-title\", \"light-proj-text\", \"light-icon\"]\n  }\n\n}\n\nexport default Project"]},"metadata":{},"sourceType":"module"}